'Предварительная работа – проверка датасета'

'Проверка пользователей на уникальность'
select 	count(*) all_id,
		count(distinct user_id) as all_unique_id
from	users u

'Подсчет сколько зарегистрированных менторов и менти на платформе'

select 	role,
		count(user_id) as user_quantity
from 	users u 
group by
		role

'Проверка сессии на уникальность id'

select 	count(*) as all_id,
		count(distinct session_id) as all_unique_id
from 	sessions s 


'1 Какое количество менторов и менти взаимодействуют каждый месяц на нашей платформе? 
Как меняется этот показатель из месяца в месяц?'

select date_trunc('month', session_date_time) :: date as session_month,
count(distinct mentee_id) as mentee_cnt,
count(distinct mentor_id) as mentor_cnt
from sessions s 
group by session_month
order by session_month


select mentor_id, count(*)
from sessions s
where session_status = 'finished'
group by mentor_id 


'2 Сколько на платформе менторов и менти, которые еще   не приняли участие ни в одной встрече?'


SELECT  count(user_id) FILTER (WHERE "role" = 'mentee') as mentee_quantity
FROM    users u 
WHERE   NOT EXISTS (SELECT mentee_id FROM sessions WHERE mentee_id = user_id)

SELECT  count(user_id) FILTER (WHERE "role" = 'mentor') as mentor_quantity
FROM    users u 
WHERE   NOT EXISTS (SELECT mentor_id FROM sessions WHERE mentor_id = user_id)

SELECT  date_trunc('month', reg_date) :: date as created_month,
        count(user_id) FILTER (WHERE "role" = 'mentee') as mentee_quantity
FROM    users u 
WHERE   NOT EXISTS (SELECT mentee_id FROM sessions WHERE mentee_id = user_id)
GROUP BY    
        created_month
ORDER BY 
        created_month

SELECT  r."name" as region_name,
        count(id) FILTER (WHERE "role" = 'mentee') as person_quantity
FROM    users u 
        LEFT JOIN region r 
            ON u.region_id = r.id 
WHERE   NOT EXISTS (SELECT mentee_id FROM sessions WHERE mentee_id = user_id)
GROUP BY    
        r."name"
ORDER BY 
        person_quantity DESC 

WITH data_preparation AS 
(
    SELECT  u.user_id,
            r."name" as region_name,
            EXISTS (
                        SELECT  1 
                        FROM    sessions s  
                        WHERE   u.user_id = s.mentee_id
                    ) has_session
    FROM    users u 
            LEFT JOIN region r 
                ON u.region_id = r.id 
    WHERE   u."role" = 'mentee'
) 

SELECT  r."name", 
        count(user_id) as all_user, 
        round(count(user_id) FILTER (WHERE has_session IS FALSE) :: NUMERIC / count(user_id), 2) as user_without_session_percent 
FROM    users u
GROUP BY 
        r."name"
ORDER BY 
        all_user DESC, 
        user_without_session_percent DESC        
        
'3a Сколько у каждого ментора в среднем успешных сессий  в неделю по месяцам? Как меняется частота встреч   в неделю от месяца к месяцу?'

WITH month_week_table AS 
(
    SELECT  mentor_id,
            date_trunc('month', session_date_time) :: date session_month,
            EXTRACT(month from session_date_time) month_n,
            EXTRACT(week from session_date_time) week_n, 
            count(session_id) session_per_week
    FROM    sessions s 
    WHERE   session_status = 'finished'
    GROUP BY 
            mentor_id, 
            session_month, 
            month_n, 
            week_n
)
SELECT  mentor_id, 
        session_month :: date,
        month_n :: int, 
        avg(session_per_week) :: int avg_session_per_week
FROM    month_week_table
GROUP BY 
        mentor_id, 
        session_month,
        month_n
ORDER BY 
        avg_session_per_week DESC 

'3б Определите ТОП-5 менторов с самым большим числом сессий за последний полный месяц'

select u.user_id, EXTRACT(month  FROM s.session_date_time) - 1 as month , count(*) as count
from users u
left join sessions s on s.mentor_id = u.user_id 
where 
	s.session_status = 'finished' and 
	EXTRACT(Year FROM session_date_time) = 2022
group by 
	u.user_id, 
	EXTRACT(month  FROM s.session_date_time)
order by 
	month desc, 
	count desc
limit 5

WITH session_per_mentor AS 
(
    SELECT  mentor_id,  
            count(session_id) as session_quantity
    FROM    sessions s
    WHERE   session_date_time :: date BETWEEN '2022-08-01' AND '2022-08-31'
    GROUP BY 
            mentor_id 
),
session_quantity_numeration AS
(
    SELECT  mentor_id, 
            session_quantity, 
            DENSE_RANK () OVER (ORDER BY session_quantity DESC) as dr
    FROM    session_per_mentor
) 
SELECT  mentor_id
FROM    session_quantity_numeration
WHERE   dr <= 5

'Сколько времени в среднем проходит между менторскими встречами у одного менти? Ментора?
считаем сколько встреч прошел каждый ментор и каждый менти
Макс - мин  / кол-во встреч для каждого ментора и менти'

'4а Сколько времени в среднем проходит между менторскими встречами у одного ментора?'

WITH next_session_dt_preparation AS 
(
    SELECT  mentor_id, 
            session_date_time, 
            LEAD (session_date_time) OVER (PARTITION BY mentor_id ORDER BY session_date_time) as next_session_dt, 
            ROW_NUMBER () OVER (PARTITION BY mentor_id ORDER BY session_date_time) rn
    FROM    sessions s 
), 
day_diff_table AS 
(
    SELECT  *,
            date_part('day', next_session_dt - session_date_time) as day_diff
    FROM    next_session_dt_preparation
    WHERE   rn = 1
) 
SELECT  mentor_id,
        day_diff
FROM    day_diff_table

'4б Сколько времени в среднем проходит между менторскими встречами у одного менти?'

WITH next_session_dt_preparation AS 
(
    SELECT  mentee_id, 
            session_date_time, 
            LEAD (session_date_time) OVER (PARTITION BY mentee_id ORDER BY session_date_time) as next_session_dt, 
            ROW_NUMBER () OVER (PARTITION BY mentee_id ORDER BY session_date_time) rn
    FROM    sessions s 
), 
day_diff_table AS 
(
    SELECT  *,
            date_part('day', next_session_dt - session_date_time) as day_diff
    FROM    next_session_dt_preparation
    WHERE   rn = 1
) 
SELECT  mentee_id,
        day_diff
FROM    day_diff_table

'5 Сколько сессий по каждому направлению менторства   в месяц обычно отменяется? Как меняется доля отмененных сессий помесячно?
нужно добавить колонку года/месяца и сделать'

SELECT  date_trunc('month', session_date_time) :: date session_month,
        count(session_id) all_session, 
        round(count(session_id) FILTER (WHERE session_status = 'canceled') :: numeric/ count(session_id), 2) canceled_percent
FROM    sessions  
WHERE   session_date_time :: date < '2022-09-01'
GROUP BY 
        session_month
ORDER BY 
        session_month

'6 Определите, в какой день недели последнего полного месяца прошло больше всего встреч.
Определите самый загруженный день недели для каждого направления менторства.
В результатах выведите тип направления, день недели и количество встреч.'
	
select 
	d.name,
	TO_CHAR(session_date_time, 'Day') as day_of_week,
	count (*)	
from 
	domain d
left join sessions s 
	on d.id = s.mentor_domain_id
where 
	s.session_status = 'finished'  	
    AND session_date_time >= (SELECT MAX(DATE_TRUNC('month', session_date_time)) - INTERVAL '1 month' FROM sessions)
    AND session_date_time >= (SELECT MAX(DATE_TRUNC('year', session_date_time)) FROM sessions)
group by
	d.name,
	day_of_week,
	extract(DOW FROM s.session_date_time)
order by 
	d.name,
	extract(DOW FROM s.session_date_time)
	
'Спрогнозируйте, сколько новых менторов нужно найти, если  в следующем месяце количество активных менти увеличится на 500 человек.
Учитывайте, что занятость новых менторов будет такой же, как у текущих.'
'Нужно посчитатьсколько один менти делает в месяц встреч, так как данные иднамично изменяются лучше делать выборку
из менти, которые были активны последний месяц. Затем посчитать сколько за последний месяц проводят встреч менторы
и разделить полученные резльтаты'

select distinct mentee_id 
from sessions s 
where session_date_time >= (SELECT MAX(DATE_TRUNC('month', session_date_time)) - INTERVAL '1 month' FROM sessions)
order by mentee_id 

select count(*)
from (select distinct mentee_id 
from sessions s 
where session_date_time >= (SELECT MAX(DATE_TRUNC('month', session_date_time)) - INTERVAL '1 month' FROM sessions)
order by mentee_id ) as subquery 

'1256'

select count(*)
from (select distinct mentor_id 
from sessions s 
where session_date_time >= (SELECT MAX(DATE_TRUNC('month', session_date_time)) - INTERVAL '1 month' FROM sessions)
order by mentor_id ) as subquery

'593'

'Целом если взять за эталонный последний месяц, можно посмотреть на частоту встреч ментора и менти
затем разделить полученные значения и получим результат 
(593/1256)* 500 = 236
Необходимо привлечь 236 новых менторов'